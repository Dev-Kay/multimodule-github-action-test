name: Deploy

on:
  push:
    branches:
      - master

run-name: '${{ github.workflow }} | ${{ github.event.inputs.app }} ${{ github.event.inputs.int-env }}'

concurrency:
  group: deploy-${{ github.event.inputs.int-env }}-${{ github.event.inputs.app }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APPS: "api admin batch"

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.check.outputs.api }}
      admin-changed: ${{ steps.check.outputs.admin }}
      batch-changed: ${{ steps.check.outputs.batch }}
      data-changed: ${{ steps.check.outputs.data }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Determine changed directories
        id: check
        run: |
          API_CHANGED=$(git diff --name-only HEAD~1 | grep -q '^api/' || echo false)
          ADMIN_CHANGED=$(git diff --name-only HEAD~1 | grep -q '^admin/' || echo false)
          BATCH_CHANGED=$(git diff --name-only HEAD~1 | grep -q '^batch/' || echo false)
          DATA_CHANGED=$(git diff --name-only HEAD~1 | grep -q '^data/' && echo 'true' || echo 'false')
          
          temp1=(${{ env.APPS }})
          echo ${temp1[@]}
          temp=()
          if [ ${DATA_CHANGED} == 'true' ]; then
            temp=(${{ env.APPS }})
          else
            for APP in ${{ env.APPS }}; do
              is-run=$(git diff --name-only HEAD^ HEAD | grep -q '^${APP}/' && echo 'true' || echo 'false')
              echo "${is-run}"
              if [[ ${is-run} == 'true' ]]; then
                temp+=(${APP})
              fi
            done
          fi
          echo ${temp[@]}
#          echo "${API_CHANGED} || ${ADMIN_CHANGED} || ${BATCH_CHANGED} || ${DATA_CHANGED}"

#
#  build-and-deploy:
#    needs: check-changes
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        app: ["api", "admin", "batch"]
#    steps:
#      - name: Print
#        run: |
#          echo "${{ needs.check-changes.outputs[format('{0}-changed', matrix.app)] }}"
#
#      - name: Checkout code
#        if: needs.check-changes.outputs.${{ matrix.app }}-changed == 'true' || needs.check-changes.outputs.data-changed == 'true'
#        uses: actions/checkout@v3
#
#      - name: Save deploy info
#        if: needs.check-changes.outputs.${{ matrix.app }}-changed == 'true' || needs.check-changes.outputs.data-changed == 'true'
#        run: echo "${{ matrix.app }}_deploy_info=${{ matrix.app }}::1.0.0" >> $GITHUB_ENV
#
#  print-deploy-info:
#    needs: build-and-deploy
#    runs-on: ubuntu-latest
#    steps:
#      - name: Print
#        run: |
#          for APP in ${{ env.APPS }}; do
#            IMAGE_URI=$(printenv "${APP}-deploy-info")
#            if [ -n "$IMAGE_URI" ]; then
#              echo "${APP}: ${IMAGE_URI}"
#            fi
#          done