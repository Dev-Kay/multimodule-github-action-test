name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      is-manual:
        type: choice
        required: true
        default: true
        options:
          - true

run-name: ${{ github.workflow }} ${{ github.event.inputs.is-manual && ' | MANUAL' || ''}}

concurrency:
  group: deploy-${{ github.event.inputs.int-env }}-${{ github.event.inputs.app }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APPS: "api admin batch"

jobs:
  filter-build-targets:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.check.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Filtering
        id: check
        run: |
          DATA_CHANGED=$(git diff --name-only HEAD~1 | grep -q '^data/' && echo true || echo false)

          temp=()
          if [[ ${DATA_CHANGED} == true ]]; then
            temp=(${{ env.APPS }})
          else
            for APP in ${{ env.APPS }}; do
              if git diff --name-only HEAD^ HEAD | grep "^${APP}/"; then
                temp+=(${APP})
              fi
            done
          fi
          echo ${temp[@]}
          echo "matrix=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${temp[@]}")" >> $GITHUB_OUTPUT

  build-and-deploy:
    if: needs.filter-build-targets.outputs.matrix != ''
    needs: filter-build-targets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON(needs.filter-build-targets.outputs.matrix) }}
    steps:
      - name: Print
        run: |
          echo "${{ matrix.app }}"
#          echo "${{ needs.check-changes.outputs[format('{0}-changed', matrix.app)] }}"
#
#      - name: Checkout code
#        if: needs.check-changes.outputs.${{ matrix.app }}-changed == 'true' || needs.check-changes.outputs.data-changed == 'true'
#        uses: actions/checkout@v3
#
#      - name: Save deploy info
#        if: needs.check-changes.outputs.${{ matrix.app }}-changed == 'true' || needs.check-changes.outputs.data-changed == 'true'
#        run: echo "${{ matrix.app }}_deploy_info=${{ matrix.app }}::1.0.0" >> $GITHUB_ENV
#
#  print-deploy-info:
#    needs: build-and-deploy
#    runs-on: ubuntu-latest
#    steps:
#      - name: Print
#        run: |
#          for APP in ${{ env.APPS }}; do
#            IMAGE_URI=$(printenv "${APP}-deploy-info")
#            if [ -n "$IMAGE_URI" ]; then
#              echo "${APP}: ${IMAGE_URI}"
#            fi
#          done
